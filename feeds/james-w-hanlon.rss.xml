<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>James W. Hanlon - James W. Hanlon</title><link>http://jameswhanlon.com/</link><description></description><lastBuildDate>Thu, 29 Dec 2022 00:00:00 +0100</lastBuildDate><item><title>Cornish Unit House retrofit insulation</title><link>http://jameswhanlon.com/cornish-unit-house-retrofit-insulation.html</link><description>&lt;p&gt;I live in a &lt;a href="https://nonstandardhouse.com/cornish-unit-type-1-precast-reinforced-concrete-house/"&gt;Cornish Unit house (Type
1)&lt;/a&gt;
and have recently had a heat pump installed to replace an ageing gas boiler.
Having lived in the house for several years, I was well aware of significant
thermal issues, particularly upstairs, due to the house being very cold in the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Thu, 29 Dec 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2022-12-29:/cornish-unit-house-retrofit-insulation.html</guid><category>projects</category><category>energy-efficiency</category><category>retrofit</category><category>sustainability</category></item><item><title>Logic gates to a programming language using the Hex architecture</title><link>http://jameswhanlon.com/logic-gates-to-a-programming-language-using-the-hex-architecture.html</link><description>&lt;p&gt;This note walks through a hardware implementation of a simple processor and
complete compiler for a programming language targeted at it. The processor
architecture is designed to as simple as possible but provide a sensible target
for the compilation of complex programs using simple strategies. The
implementation of the processor …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Fri, 18 Nov 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2022-11-18:/logic-gates-to-a-programming-language-using-the-hex-architecture.html</guid><category>notes</category><category>computing</category><category>computer-architecture</category><category>microelectronics</category></item><item><title>The hardware pseudorandom number generator of the Graphcore IPU</title><link>http://jameswhanlon.com/the-hardware-pseudorandom-number-generator-of-the-graphcore-ipu.html</link><description>&lt;p&gt;This note is a short summary of my &lt;a href="https://ieeexplore.ieee.org/document/9875973"&gt;&lt;span class="caps"&gt;IEEE&lt;/span&gt; Transactions on Computers journal
paper&lt;/a&gt; and was originally written
to appear on the Graphcore&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;The Graphcore &lt;span class="caps"&gt;IPU&lt;/span&gt; contains a novel pseudorandom number generator (&lt;span class="caps"&gt;PRNG&lt;/span&gt;) that
was designed to produce high-quality statistical randomness, whist also being
cheap to implement in hardware …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Wed, 21 Sep 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2022-09-21:/the-hardware-pseudorandom-number-generator-of-the-graphcore-ipu.html</guid><category>notes</category><category>computing</category><category>PRNGs</category></item><item><title>Garden workshop</title><link>http://jameswhanlon.com/garden-workshop.html</link><description>&lt;p&gt;During the summer of 2021 I built a garden workshop. This was a joint endeavour
with my partner, who designed and specified the form and finish (credit for the
&lt;a href="#drawings"&gt;&lt;span class="caps"&gt;CAD&lt;/span&gt; drawings&lt;/a&gt; goes to her). The basic construction follows the methodology of
&lt;a href="https://www.oakwoodgardenrooms.com/"&gt;Oakwood Garden Rooms&lt;/a&gt; who&amp;#8217;s &lt;a href="https://www.youtube.com/channel/UChqWFbSX8STP_c8W0RVW1Xw"&gt;YouTube
channel&lt;/a&gt; proved
invaluable …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Mon, 04 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2021-10-04:/garden-workshop.html</guid><category>non-technical</category><category>sheds</category><category>construction</category></item><item><title>Home thermal-imaging survey</title><link>http://jameswhanlon.com/home-thermal-imaging-survey.html</link><description>&lt;p&gt;I recently moved into a &lt;a href="https://nonstandardhouse.com/cornish-unit-type-1-precast-reinforced-concrete-house/"&gt;Cornish Unit Type 1 house&lt;/a&gt;, and
with my involvement with &lt;a href="https://cheeseproject.co.uk"&gt;The &lt;span class="caps"&gt;CHEESE&lt;/span&gt; Project&lt;/a&gt; I was keen to
perform a thermal-imaging survey to better understand how well the building
performs thermally. Also, with the first few months in the house being in
winter and it feeling …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Wed, 31 Mar 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2021-03-31:/home-thermal-imaging-survey.html</guid><category>non-technical</category><category>energy-efficiency</category><category>retrofit</category><category>sustainability</category></item><item><title>Reflections on the state of nature</title><link>http://jameswhanlon.com/reflections-on-the-state-of-nature.html</link><description>&lt;p&gt;For a long time I have been deeply worried about the looming threat of climate
change and its broad consequences. But greenhouse gas emissions from human
activities are just one part of a complex picture in which we (human beings)
are damaging our environment so severely that the future of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Fri, 04 Dec 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2020-12-04:/reflections-on-the-state-of-nature.html</guid><category>non-technical</category><category>climate-change</category><category>sustainability</category></item><item><title>Error-correcting codes</title><link>http://jameswhanlon.com/error-correcting-codes.html</link><description>&lt;p&gt;Error correcting codes (ECCs) are used in computer and communication systems to
improve resiliency to bit flips caused by permanent hardware faults or
transient conditions, such as neutron particles from cosmic rays, known
generally as &lt;a href="https://en.wikipedia.org/wiki/Soft_error"&gt;soft errors&lt;/a&gt;. This note
describes the principles of Hamming codes that underpin &lt;span class="caps"&gt;ECC&lt;/span&gt; schemes, &lt;span class="caps"&gt;ECC …&lt;/span&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Sat, 02 May 2020 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2020-05-02:/error-correcting-codes.html</guid><category>notes</category><category>computing</category></item><item><title>Recycled allotment shed</title><link>http://jameswhanlon.com/recycled-allotment-shed.html</link><description>&lt;p&gt;A friend was in need of a shed on her allotment to store tools and as a place
to shelter in the rain, so I helped her to build one. The aim was to build
something solid that would stand up to the elements (unlike most allotment
sheds), to use …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Sun, 10 Nov 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2019-11-10:/recycled-allotment-shed.html</guid><category>non-technical</category><category>sheds</category><category>construction</category></item><item><title>New chips for machine intelligence</title><link>http://jameswhanlon.com/new-chips-for-machine-intelligence.html</link><description>&lt;p&gt;This note summarises details of some of the new silicon chips for machine
intelligence. Its aim is to distil the most important implementation and
architectural details (at least that are currently available), to highlight the
main differences between them. I&amp;#8217;m focusing on chips designed for training
since they represent …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Fri, 04 Oct 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2019-10-04:/new-chips-for-machine-intelligence.html</guid><category>notes</category><category>computing</category><category>machine-intelligence</category><category>computer-architecture</category></item><item><title>Silicon design for test structures</title><link>http://jameswhanlon.com/silicon-design-for-test-structures.html</link><description>&lt;p&gt;Design for test (&lt;span class="caps"&gt;DFT&lt;/span&gt;) is a methodology for silicon integrated-circuit chips to
allow the devices to be tested during manufacture. Such testability permits the
detection of defects due to problems in the manufacturing processes that would
adversely affect the functional behaviour of the device. This note explains
some of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Thu, 18 Apr 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2019-04-18:/silicon-design-for-test-structures.html</guid><category>notes</category><category>microelectronics</category></item><item><title>RGB lightbox stacks</title><link>http://jameswhanlon.com/rgb-lightbox-stacks.html</link><description>&lt;div class="text-center"&gt;
  &lt;a href="https://jwh.ams3.digitaloceanspaces.com/homepage/RGB-stacks/completed-boxes-3.jpg" data-lightbox="shed"&gt;
    &lt;img class="figure-img img-fluid thumbnail" src="/thumbs/completed-boxes-3_800x800.jpg" alt="No alt text"&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The &amp;#8216;&lt;span class="caps"&gt;RGB&lt;/span&gt; stacks&amp;#8217; lightboxes are an experiment with using high-power LEDs,
generous volumes and translucent acrylic plastic to create big blocks of
colour. They are constructed from 12 mm birch ply and each pixel measures 300 x
300 (outer dimensions). They are built as three columns of three pixels to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Mon, 31 Dec 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2018-12-31:/rgb-lightbox-stacks.html</guid><category>projects</category><category>making</category><category>lighting</category><category>electronics</category></item><item><title>Three-channel high-power LED driver</title><link>http://jameswhanlon.com/three-channel-high-power-led-driver.html</link><description>&lt;div class="float-right"&gt;
&lt;a href="https://jwh.ams3.digitaloceanspaces.com/homepage/LED-driver/board-layers.png" data-lightbox="led-driver"&gt;
  &lt;img class="thumbnail rounded" src="thumbs/board-layers_400x400.png" alt="Board silk screen"&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;This note describes an &lt;span class="caps"&gt;LED&lt;/span&gt; driver I designed for a lighting project. I decided
on a custom solution because I couldn&amp;#8217;t find any suitable boards available to
buy at a reasonable price. The intended application (which I will describe in
another note) requires 12 high-power (~1W) LEDs to be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Sun, 30 Dec 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2018-12-30:/three-channel-high-power-led-driver.html</guid><category>projects</category><category>lighting</category><category>electronics</category></item><item><title>Querying logical paths in a Verilog design</title><link>http://jameswhanlon.com/querying-logical-paths-in-a-verilog-design.html</link><description>&lt;p&gt;I wrote a simple command-line tool for querying logical paths in a Verilog
design. My motivation for doing this is that it&amp;#8217;s easy to create complex logic
in Verilog, particularly between modules, but more difficult to understand
exactly what is driving a particular net, just from inspecting the code …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Tue, 20 Nov 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2018-11-20:/querying-logical-paths-in-a-verilog-design.html</guid><category>notes</category><category>computing</category><category>microelectronics</category><category>verilog</category></item><item><title>Retrofit shed insulation</title><link>http://jameswhanlon.com/retrofit-shed-insulation.html</link><description>&lt;p&gt;To make the shed in my garden (built by the previous owner) a usable space in
cold weather, I decided to insulate it. The construction of it is a stud timber
frame of 2x4&amp;#8221; with a corrugated metal exterior and lined inside with &lt;span class="caps"&gt;OSB&lt;/span&gt; board.
The construction has created voids …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Sun, 30 Sep 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2018-09-30:/retrofit-shed-insulation.html</guid><category>non-technical</category><category>energy-efficiency</category><category>retrofit</category><category>sheds</category><category>sustainability</category></item><item><title>Vim command composition</title><link>http://jameswhanlon.com/vim-command-composition.html</link><description>&lt;p&gt;Composition of Vim&amp;#8217;s motions and&amp;nbsp;operators&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Thu, 23 Aug 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2018-08-23:/vim-command-composition.html</guid><category>notes</category><category>computing</category><category>vim</category></item><item><title>Writing synthesizable Verilog</title><link>http://jameswhanlon.com/writing-synthesizable-verilog.html</link><description>&lt;p&gt;In the last year, I&amp;#8217;ve started from scratch writing Verilog for hardware
design. Coming from a software background where I was mainly using C/C++ and
Python, it has been interesting to experience the contrasting philosophy and
mindset associated with using a language to describe hardware circuits. Much of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Fri, 04 May 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2018-05-04:/writing-synthesizable-verilog.html</guid><category>notes</category><category>computing</category><category>microelectronics</category><category>programming-languages</category><category>verilog</category></item><item><title>Notes on testing random number generators</title><link>http://jameswhanlon.com/notes-on-testing-random-number-generators.html</link><description>&lt;p&gt;Recently I have been doing some work testing the quality of &lt;a href="https://en.wikipedia.org/wiki/Random_number_generator"&gt;random
number generators&lt;/a&gt;
(RNGs), so I thought I would record things that should be useful as a
reference. I won&amp;#8217;t provide too much background here since there are many good
existing references to the theory and practice of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Wed, 05 Apr 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2017-04-05:/notes-on-testing-random-number-generators.html</guid><category>notes</category><category>computing</category><category>PRNGs</category></item><item><title>A convolutional neural network from scratch</title><link>http://jameswhanlon.com/a-convolutional-neural-network-from-scratch.html</link><description>&lt;p&gt;The online book &amp;#8216;&lt;a href="http://neuralnetworksanddeeplearning.com"&gt;Neural Networks and Deep
Learning&lt;/a&gt;&amp;#8216; by Michael Nielsen is an
excellent introduction to neural networks and the world of deep learning.  As
the book works through the theory, it makes it concrete by explaining how the
concepts are implemented using Python. The complete Python programs are
&lt;a href="https://github.com/mnielsen/neural-networks-and-deep-learning"&gt;available …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Fri, 10 Feb 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2017-02-10:/a-convolutional-neural-network-from-scratch.html</guid><category>notes</category><category>machine-intelligence</category></item><item><title>Reducing memory use in deep neural networks</title><link>http://jameswhanlon.com/reducing-memory-use-in-deep-neural-networks.html</link><description>&lt;p&gt;The memory requirements for modern deep neural networks can be significant,
however memory on-chip is expensive relative to computational resources such as
integer and floating-point units, and access to external &lt;span class="caps"&gt;DRAM&lt;/span&gt; memory is orders
of magnitude slower. This article surveys some recent results that demonstrate
the economy of reducing memory …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2017-02-05:/reducing-memory-use-in-deep-neural-networks.html</guid><category>notes</category><category>computing</category><category>machine-intelligence</category></item><item><title>Machine learning challenges for computer architecture</title><link>http://jameswhanlon.com/machine-learning-challenges-for-computer-architecture.html</link><description>&lt;p&gt;Neural networks have become a hot topic in computing and their development is
progressing rapidly. They have a long history with some of the first designs
proposed in the 1940s.  But despite being an active area of research since
then, it has not been until the last five to ten …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Fri, 04 Nov 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2016-11-04:/machine-learning-challenges-for-computer-architecture.html</guid><category>notes</category><category>computing</category><category>computer-architecture</category><category>machine-intelligence</category></item><item><title>The XC Programming Language</title><link>http://jameswhanlon.com/the-xc-programming-language.html</link><description>&lt;p&gt;&lt;span class="caps"&gt;XC&lt;/span&gt; is a programming language developed by &lt;span class="caps"&gt;XMOS&lt;/span&gt; for real-time embedded parallel
programming of their XCore processor architecture. &lt;span class="caps"&gt;XC&lt;/span&gt; is based on the features
for parallelism and communication in occam, and the syntax and some sequential
features of C. In addition, &lt;span class="caps"&gt;XC&lt;/span&gt; provides primitives to expose hardware
resources: locks, ports …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Sat, 13 Dec 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2014-12-13:/the-xc-programming-language.html</guid><category>notes</category><category>computing</category><category>computer-architecture</category><category>programming-languages</category></item><item><title>The XMOS XMP-64</title><link>http://jameswhanlon.com/the-xmos-xmp-64.html</link><description>&lt;p&gt;The &lt;span class="caps"&gt;XMP&lt;/span&gt;-64 is an experimental single-board distributed-memory parallel computer
with 512 hardware threads  and is programmable with a C-like language.  It was
developed by &lt;a href="https://www.xmos.com&amp;gt;"&gt;&lt;span class="caps"&gt;XMOS&lt;/span&gt;&lt;/a&gt; in 2009 to demonstrate the
scalablility of the &lt;a href="https://en.wikipedia.org/wiki/XCore_XS1"&gt;&lt;span class="caps"&gt;XS1&lt;/span&gt; architecture&lt;/a&gt;.
Since then it has been &lt;a href="https://www.xmos.com/published/xmp-64-end-life"&gt;discontinued&lt;/a&gt;
but remains a fascinating device from the point …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Thu, 04 Dec 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2014-12-04:/the-xmos-xmp-64.html</guid><category>Notes</category><category>computing</category><category>electronics</category></item><item><title>Scalable abstractions for general-purpose parallel computation</title><link>http://jameswhanlon.com/scalable-abstractions-for-general-purpose-parallel-computation.html</link><description>&lt;p&gt;An overview of my PhD&amp;nbsp;thesis.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James W. Hanlon</dc:creator><pubDate>Wed, 01 Oct 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:jameswhanlon.com,2014-10-01:/scalable-abstractions-for-general-purpose-parallel-computation.html</guid><category>notes</category><category>computing</category><category>computer-architecture</category></item></channel></rss>